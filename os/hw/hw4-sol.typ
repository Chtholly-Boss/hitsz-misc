#import "../macros.typ"
= Part I: I/O 与存储
A 
C // 多重中断的情况下，会处理更高优先级的中断
A // 6*50*80=24000 char/min = 400 char/s, 400 * 50 us = 20ms, 20ms/1000ms = 2%
A // 22 年 408 32，驱动程序需要与设备特定的IO控制方式进行交互
C // 接口用来传输信号，IO逻辑用于控制设备
B 
A // 先要有独占设备
A // b/N 个字节，寻道时间 + 传输时间 T+r

== 简答题
=== 1
设定初始状态为 (一个缓冲区满，一个缓冲区空，CPU空闲)

到达同一状态需要的时间为 80 us

总时长为：80 + 80*3+ 20 + 50 = 390us

每个数据块的平均处理时间为 390/4 = 97.5 us

=== 2
不同算法的磁头移动如下表所示
#image("assets/4-2-2-2.png")

- FCFS: $#sym.Sigma abs("next" - "prev") = 2013$
- SSTF: $(874-345) + |105-874| = 529 + 769 = 1298$
- SCAN: $|0-345| + 874 = 1219$
- LOOK: $|105-345| + |874-105| = 1009$
- C-SCAN: $|0-345| + 999 + |376-999| = 1967$
- C-LOOK: $|105-345| + |874-105| + |376-874| = 1507$

= Part II: 文件系统
A // read 不需要名称，通过文件描述符来访问
B // 读写指针为进程私有
D // ？
B // 索引节点号为 4B 整数，即 32bit
C // 4 * 256B + 2 * 64 * 256B + 64 * 64 * 256B 

== 简答题
=== 1
1) 文件系统的磁盘块数量为 4 TB / 1 KB = $2^(32)$ 个，即需要 32bit 来表示，故块号至少占 4 字节，单个文件的最大长度为 512 / 4 = 128 个磁盘块，即 128 KB

2) 对两部分分别考虑：
- 对第一部分，块数 2B 最多表示 $2^16 = 65536$ 个块，即 65536 KB
- 对于剩下的 504 B，可以存储 504/6 = 84 个索引项，共 84 KB
- 故单个文件的最大长度为 65536 KB + 84 KB = 65620 KB

为使单个文件的长度达到最大，应尽可能增加表示块数部分的字节数，故起始块号取最少的 4 字节，块数取 8-4 = 4 字节。

=== 2
1) 直接块所支持的最大文件长度为 10 \* 4KB = 40 KB，不超过该大小的文件可以只用到索引节点的直接块

2) 计算步骤如下：
- 一个索引块能存放  4 KB / 4B = 1K 个地址
- 一个索引节点实际包含的地址有 n = 10 + 1K + $(1 K)^2$ + $(1 K)^3$ 个
- 故寻址空间为 $n * 4 "KB" #sym.approx 4.00 "TB"$

3) 10000 B / 4KB = 2.5，即放在第三个直接块中，访问磁盘 1 次即可

4) 10 MB / 4 KB = 2560 个数据块，直接块和一级索引块仅支持 10 + 1024 个，故需要使用二级索引块，访问磁盘 3 次即可。
