#import "../template.typ":*

= 数据库索引技术

== 索引的基本概念

#board[
- 索引：定义在存储表(Table)基础之上,无需检查所有记录,快速定位所需记录的一种_辅助存储结构_,由一系列存储在磁盘上的索引项(index entries)组成,每一索引项又由两部分构成:
  - 索引字段: 由Table中某些列(通常是一列)中的值串接而成。
  - 行指针: 指向Table中包含索引字段值的记录在磁盘上的存储位置。  
]

#board[
- 稠密索引：主文件中每一个记录(形成的每一个索引字段值),都有一个索引项和它对应,指明该记录所在位置。
  - 若索引字段为候选键，则可视为一一对应
  - 若索引字段为非候选键，则需要进行冲突处理
#image("../assets/稠密索引定位.png")

- 稀疏索引：对于主文件中部分记录(形成的索引字段值),有索引项和它对应。
  - 要求主文件必须是按对应索引字段属性排序存储
]

#board[
- 主索引：索引项不指向记录指针,而是指向记录所在存储块的指针。
  - 存储表的每一存储块的第一条记录,又称为锚记录 (anchor record), 或简称为块锚(block anchor)
  - 主索引的索引字段值为块锚的索引字段值,而指针指向其所在的存储块。
  - 主索引是按索引字段值进行排序的一个_有序_文件
  - 主索引是_稀疏_索引。
- 辅助索引: 定义在主文件的任一或多个_非排序字段_上的辅助存储结构。
  - 通常是对某一非排序字段上的每一个不同值有一个索引项
  - ,如字段值不唯一,则要采用一个类似链表的结构来保存包含该字段值的所有记录的位置。
  - 辅助索引是_稠密_索引
- 主索引与辅助索引的区别:
  - 一个主文件仅可以有一个主索引,但可以有多个辅助索引
  - 可以利用主索引重新组织主文件数据,但辅助索引不能改变主文件数据
  - 主索引是稀疏索引,辅助索引是稠密索引
]

#board[
- 聚簇索引：索引中邻近的记录在主文件中也是临近存储的;
- 非聚簇索引：索引中邻近的记录在主文件中不一定是邻近存储的。
- 倒排索引：(key: values..) 转 (value: keys..)
  - 正排：一个记录有哪些值
  - 倒排：一个值在哪些记录中出现
]

#board[
- #fill_blank[稠密索引主文件必须按主键排序 (#no)]  
- #fill_blank[辅助索引 _可以_ (可以/不可以) 建立在主键上。]
]

== B+ 树索引 (多级索引)
#board[
#figure(
table(
  columns: 3, 
  [],[B+树],[B树],
  [索引字段值出现的位置],[重复出现于叶结点和非叶结点],[仅出现一次或者在叶结点或者在非叶结点;],
  [指向主文件的指针存储的位置],[仅叶节点],[叶子节点和非叶节点均有],
),
caption: [B+树与B树的区别]
)
]

#board[
- #fill_blank[B+和 B 树本质的区别是 _指向主文件的指针是否仅存于叶子节点_.]
]

// TODO: B+ 树题目： 包含插入与删除

== Hash 索引

#board[
  
]

#qs[
#image("../assets/2023hash.png", width:80%)
][

]