#import "../template.typ":*

= 数据库基本概念
== 数据库系统的基本概念

#qs([
  概念模式又称 #b ,将概念模式映射为内模式体现出数据库系统的 #b 性。
],[
全局模式；物理数据独立性。

本题考察数据库系统的三级模式两层映像，相关知识如下：
- 三级模式
  - 外模式(External Schema)，也称用户模式/局部模式
  - 概念模式(Conceptual Schema)，也称全局模式
  - 内模式(Internal Schema)，也称存储模式或物理模式
- 两层映像
  - 外模式-概念模式映像 E-C Mapping，体现了 _逻辑数据独立性_ (概念模式 C 变化时，只需改变 E-C 映像，而不需要改变应用程序 E)
  - 概念模式-内模式映像 C-I Mapping，体现了 _物理数据独立性_ (内模式 I 变化时，只需改变 C-I 映像，而不需要改变概念模式 C)
],
rel: [
+ #choice(
[关于三级模式，下列说法不正确的是],
dir:ttb,
a: [内模式又称为局部模式],
b: [概念模式又称为逻辑模式],
c: [内模式又称为存储模式],
d: [概念模式又称为全局模式],
ans: [A])
+ #choice(
[下列说法不正确的是],
dir: ttb,
a: [模式是对数据模型的抽象，数据模型的结构性描述称为模式],
b: [模式是对数据的抽象，数据的结构性描述称为模式],
c: [一个数据库是由一系列模式及其数据构成的],
d: [数据模型是对模式的抽象，模式的结构性描述称为数据模型],
ans: [A])

])

#qs([
层次模型的数据结构是 #b 结构,网状模型的数据结构是 #b 结构。
],[
树；图

本题考察经典数据模型，相关知识如下：

- 数据模型: 规定模式统一描述方式的模型, 是对 _模式_ 的结构性描述
- 经典数据模型:
  - 层次模型(Hierarchical Model): _树_ 的形式组织数据
  - 网状模型(Network Model): _图_ 的形式组织数据
  - 关系模型(Relational Model): _表_ 的形式组织数据
  - 实体-联系模型(Entity-Relationship Model): 现实世界由一组_称作实体的基本对象_以及这些_对象间的联系_构成
  - 基于对象的数据模型(Object-Based Data Model): 实体-联系模型(E-R)增加封装、方法(函数)、和对象标识等概念后的扩展
  - 半结构化数据模型(Semi-Structured Data Model): 允许_相同类型的数据项含有不同的属性集_的数据定义。通常用_可扩展标记语言(XML)_表示半结构化数据。
])

#qs([
select 是 #b (填“DML”或“DDL”)。
],[
DML 

本题考察数据库语言的类型，相关知识如下：

- 数据库系统语言包括了 
  - _DDL_ (Data Definition Language): 数据库定义语言
  - _DML_ (Data Manipulation Language): 数据库操纵语言
  - _DCL_ (Data Control Language): 数据库控制语言
])
