#import "../template.typ":*

= 存储管理
== Main Content 

#qs([
#choice(
  [下列关于物理存储的说法中,正确的是],
  dir:ttb,
  a: [对磁盘的读写是以字节为单位], 
  b: [内存有电易失性],
  c: [钝角],
  d: [钝角]
)
],[
B 

本题考察磁盘和内存的相关内容
- 主存按 _字节_ 寻址
- 二级存储器按 _块_ 寻址，并且是 _联机(online)_ 的
    - 如磁盘、闪存
- 三级存储器按 _块_ 寻址，并且是 _脱机(offline)_ 的
    - 如磁带、光盘、网络存储
- 易失性存储器：数据在计算机重启时(如关机或崩溃后)会丢失
    - 如主存
- 非易失性存储器：数据在计算机重启时会被保留。
    - 二级存储器、三级存储器
])

#qs([
比较缓冲池与虚拟内存的相似之处，解释为什么我们不能使用操作系统的虚拟内存能力来构建一个数据库管理系统
],[
相似之处：
- 目标：提供访问更多数据的能力,这些数据无法完全放入主内存中。
- 操作：根据需要从磁盘将页面加载到主内存,并替换主内存中不再需要的页面

不能使用操作系统的虚拟内存能力来构建一个数据库管理系统的原因：
1. 页面引用模式预测：数据库管理系统(DBMS)通常可以比操作系统环境中_更准确地预测页面访问的顺序或页面引用模式_。
2. 强制页面写入：数据库管理系统(DBMS)需要具备明确_强制将页面写入磁盘_的能力,即确保磁盘上的页面副本与内存中的副本保持一致。
])
== Appendix
本部分包含 PPT 的以下内容：
- 文件组织：相较于往年，本部分内容显著较少，了解即可
- 缓冲区管理：相较于往年，本部分仅保留了与操作系统重合度大的部分，同样了解即可。

#board[
不同的数据库管理系统在磁盘上的文件中管理页面方式：
- 堆文件组织
- 顺序/有序文件组织
- 哈希(hashing)文件组织 (PPT 未提及具体内容)

堆文件：无序的页面集合，其中存储的元组是随机排序的
- 创建/获取/写/删除页面
- 必须支持遍历所有页面
- 表示方式
    - 链表法
        - 在文件开头维护一个头页面(head page),该页面存储两个指针:
            - 数据页面链表头
            - 空闲页面链表头
        - 每个页面都跟踪自身中空闲槽
    - 页目录法
        - 维护特殊页面,负责追踪数据库文件中数据页面位置
        - 目录还记录每个页面的空闲槽数量
        - 必须确保目录页面与数据页面保持同步

顺序/排序文件：有序的页面集合,其中存储的元组按照排序键的顺序排列
]

#board[
- 缓冲池：可用的内存区域被划分成一个固定大小页面的数组
    - 缓冲池中的页面被称为页框
- 页目录：将页面ID映射到数据库文件中页面位置的映射表
    - 所有的更改必须记录在磁盘上
- 页表：将页面ID映射到缓冲池页框中页面副本的映射表
    - 内存中数据结构,不需要存储在磁盘上
- 缓冲区管理器为每个页框维护两个变量
    - pin_count:当前页框中的页面被请求但尚未释放的次数
    - dirty:自从页面被带入缓冲池以来,该页面是否已被修改
- 如果请求的页面不在缓冲池中：
    - 选替换页：pin_count=0
    - 写回脏页
    - 读取新页
    - 如果缓冲池中没有页面的 pin_count 等于 0,缓冲管理器必须等待某些页面被释放后才能响应页面请求。实际上，该事务可能直接被中止
- 页替换策略
    - LRU：当数据库管理系统(DBMS )需要驱逐页面时,选择时间戳最早的页面
        - 维护每个页面上次访问时的时间戳。
        - 将页面按顺序排列,以减少驱逐时的搜索时间。
    - CLOCK
        - 每个页框都有一个引用位,值为 0 或 1。
        - 当一个页面被读取到页框中,或者页框中的页面被访问时,它的引用位会被设置为 1
        - 这些帧被组织成一个环形缓冲区,并有一个“时钟指针”
            - 时钟指针顺时针旋转，检查扫过的帧
                - 如果引用位为 0,则驱逐该帧
                - 如果引用位为 1,则将引用位重置为 0,并继续扫描
- 为了更高效地处理页面请求,缓冲管理器通常会_预取_即将被请求的页面。
]

